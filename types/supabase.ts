/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/Twitter": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Twitter.id"];
          created_at?: parameters["rowFilter.Twitter.created_at"];
          oauth_token?: parameters["rowFilter.Twitter.oauth_token"];
          oauth_secret?: parameters["rowFilter.Twitter.oauth_secret"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Twitter"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Twitter */
          Twitter?: definitions["Twitter"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Twitter.id"];
          created_at?: parameters["rowFilter.Twitter.created_at"];
          oauth_token?: parameters["rowFilter.Twitter.oauth_token"];
          oauth_secret?: parameters["rowFilter.Twitter.oauth_secret"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Twitter.id"];
          created_at?: parameters["rowFilter.Twitter.created_at"];
          oauth_token?: parameters["rowFilter.Twitter.oauth_token"];
          oauth_secret?: parameters["rowFilter.Twitter.oauth_secret"];
        };
        body: {
          /** Twitter */
          Twitter?: definitions["Twitter"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Content": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Content.id"];
          created_at?: parameters["rowFilter.Content.created_at"];
          name?: parameters["rowFilter.Content.name"];
          description?: parameters["rowFilter.Content.description"];
          thumbnail?: parameters["rowFilter.Content.thumbnail"];
          submarine_cid?: parameters["rowFilter.Content.submarine_cid"];
          unlock_info?: parameters["rowFilter.Content.unlock_info"];
          short_id?: parameters["rowFilter.Content.short_id"];
          pinata_user_id?: parameters["rowFilter.Content.pinata_user_id"];
          customizations?: parameters["rowFilter.Content.customizations"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Content"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Content */
          Content?: definitions["Content"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Content.id"];
          created_at?: parameters["rowFilter.Content.created_at"];
          name?: parameters["rowFilter.Content.name"];
          description?: parameters["rowFilter.Content.description"];
          thumbnail?: parameters["rowFilter.Content.thumbnail"];
          submarine_cid?: parameters["rowFilter.Content.submarine_cid"];
          unlock_info?: parameters["rowFilter.Content.unlock_info"];
          short_id?: parameters["rowFilter.Content.short_id"];
          pinata_user_id?: parameters["rowFilter.Content.pinata_user_id"];
          customizations?: parameters["rowFilter.Content.customizations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Content.id"];
          created_at?: parameters["rowFilter.Content.created_at"];
          name?: parameters["rowFilter.Content.name"];
          description?: parameters["rowFilter.Content.description"];
          thumbnail?: parameters["rowFilter.Content.thumbnail"];
          submarine_cid?: parameters["rowFilter.Content.submarine_cid"];
          unlock_info?: parameters["rowFilter.Content.unlock_info"];
          short_id?: parameters["rowFilter.Content.short_id"];
          pinata_user_id?: parameters["rowFilter.Content.pinata_user_id"];
          customizations?: parameters["rowFilter.Content.customizations"];
        };
        body: {
          /** Content */
          Content?: definitions["Content"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Session": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Session.id"];
          created_at?: parameters["rowFilter.Session.created_at"];
          contract?: parameters["rowFilter.Session.contract"];
          shortId?: parameters["rowFilter.Session.shortId"];
          updateAuthority?: parameters["rowFilter.Session.updateAuthority"];
          used?: parameters["rowFilter.Session.used"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Session"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Session */
          Session?: definitions["Session"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Session.id"];
          created_at?: parameters["rowFilter.Session.created_at"];
          contract?: parameters["rowFilter.Session.contract"];
          shortId?: parameters["rowFilter.Session.shortId"];
          updateAuthority?: parameters["rowFilter.Session.updateAuthority"];
          used?: parameters["rowFilter.Session.used"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Session.id"];
          created_at?: parameters["rowFilter.Session.created_at"];
          contract?: parameters["rowFilter.Session.contract"];
          shortId?: parameters["rowFilter.Session.shortId"];
          updateAuthority?: parameters["rowFilter.Session.updateAuthority"];
          used?: parameters["rowFilter.Session.used"];
        };
        body: {
          /** Session */
          Session?: definitions["Session"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Contact": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Contact.id"];
          created_at?: parameters["rowFilter.Contact.created_at"];
          email?: parameters["rowFilter.Contact.email"];
          name?: parameters["rowFilter.Contact.name"];
          company?: parameters["rowFilter.Contact.company"];
          telegram?: parameters["rowFilter.Contact.telegram"];
          twitter?: parameters["rowFilter.Contact.twitter"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Contact"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Contact */
          Contact?: definitions["Contact"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Contact.id"];
          created_at?: parameters["rowFilter.Contact.created_at"];
          email?: parameters["rowFilter.Contact.email"];
          name?: parameters["rowFilter.Contact.name"];
          company?: parameters["rowFilter.Contact.company"];
          telegram?: parameters["rowFilter.Contact.telegram"];
          twitter?: parameters["rowFilter.Contact.twitter"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Contact.id"];
          created_at?: parameters["rowFilter.Contact.created_at"];
          email?: parameters["rowFilter.Contact.email"];
          name?: parameters["rowFilter.Contact.name"];
          company?: parameters["rowFilter.Contact.company"];
          telegram?: parameters["rowFilter.Contact.telegram"];
          twitter?: parameters["rowFilter.Contact.twitter"];
        };
        body: {
          /** Contact */
          Contact?: definitions["Contact"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Users.id"];
          created_at?: parameters["rowFilter.Users.created_at"];
          pinata_user_id?: parameters["rowFilter.Users.pinata_user_id"];
          pinata_submarine_key?: parameters["rowFilter.Users.pinata_submarine_key"];
          pinata_gateway_subdomain?: parameters["rowFilter.Users.pinata_gateway_subdomain"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Users */
          Users?: definitions["Users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Users.id"];
          created_at?: parameters["rowFilter.Users.created_at"];
          pinata_user_id?: parameters["rowFilter.Users.pinata_user_id"];
          pinata_submarine_key?: parameters["rowFilter.Users.pinata_submarine_key"];
          pinata_gateway_subdomain?: parameters["rowFilter.Users.pinata_gateway_subdomain"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Users.id"];
          created_at?: parameters["rowFilter.Users.created_at"];
          pinata_user_id?: parameters["rowFilter.Users.pinata_user_id"];
          pinata_submarine_key?: parameters["rowFilter.Users.pinata_submarine_key"];
          pinata_gateway_subdomain?: parameters["rowFilter.Users.pinata_gateway_subdomain"];
        };
        body: {
          /** Users */
          Users?: definitions["Users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  Twitter: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    oauth_token: string;
    /** Format: text */
    oauth_secret: string;
  };
  Content: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
    /** Format: text */
    description: string;
    /** Format: text */
    thumbnail?: string;
    /** Format: text */
    submarine_cid: string;
    /** Format: jsonb */
    unlock_info: unknown;
    /** Format: text */
    short_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `Users.pinata_user_id`.<fk table='Users' column='pinata_user_id'/>
     */
    pinata_user_id: string;
    /** Format: jsonb */
    customizations?: unknown;
  };
  Session: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    contract?: string;
    /** Format: text */
    shortId?: string;
    /** Format: text */
    updateAuthority?: string;
    /**
     * Format: boolean
     * @default false
     */
    used: boolean;
  };
  Contact: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    email: string;
    /** Format: text */
    name?: string;
    /** Format: text */
    company?: string;
    /** Format: text */
    telegram?: string;
    /** Format: text */
    twitter?: string;
  };
  Users: {
    /** Format: uuid */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    pinata_user_id: string;
    /** Format: text */
    pinata_submarine_key?: string;
    /** Format: text */
    pinata_gateway_subdomain?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description Twitter */
  "body.Twitter": definitions["Twitter"];
  /** Format: uuid */
  "rowFilter.Twitter.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.Twitter.created_at": string;
  /** Format: text */
  "rowFilter.Twitter.oauth_token": string;
  /** Format: text */
  "rowFilter.Twitter.oauth_secret": string;
  /** @description Content */
  "body.Content": definitions["Content"];
  /** Format: uuid */
  "rowFilter.Content.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.Content.created_at": string;
  /** Format: text */
  "rowFilter.Content.name": string;
  /** Format: text */
  "rowFilter.Content.description": string;
  /** Format: text */
  "rowFilter.Content.thumbnail": string;
  /** Format: text */
  "rowFilter.Content.submarine_cid": string;
  /** Format: jsonb */
  "rowFilter.Content.unlock_info": string;
  /** Format: text */
  "rowFilter.Content.short_id": string;
  /** Format: uuid */
  "rowFilter.Content.pinata_user_id": string;
  /** Format: jsonb */
  "rowFilter.Content.customizations": string;
  /** @description Session */
  "body.Session": definitions["Session"];
  /** Format: uuid */
  "rowFilter.Session.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.Session.created_at": string;
  /** Format: text */
  "rowFilter.Session.contract": string;
  /** Format: text */
  "rowFilter.Session.shortId": string;
  /** Format: text */
  "rowFilter.Session.updateAuthority": string;
  /** Format: boolean */
  "rowFilter.Session.used": string;
  /** @description Contact */
  "body.Contact": definitions["Contact"];
  /** Format: uuid */
  "rowFilter.Contact.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.Contact.created_at": string;
  /** Format: text */
  "rowFilter.Contact.email": string;
  /** Format: text */
  "rowFilter.Contact.name": string;
  /** Format: text */
  "rowFilter.Contact.company": string;
  /** Format: text */
  "rowFilter.Contact.telegram": string;
  /** Format: text */
  "rowFilter.Contact.twitter": string;
  /** @description Users */
  "body.Users": definitions["Users"];
  /** Format: uuid */
  "rowFilter.Users.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.Users.created_at": string;
  /** Format: uuid */
  "rowFilter.Users.pinata_user_id": string;
  /** Format: text */
  "rowFilter.Users.pinata_submarine_key": string;
  /** Format: text */
  "rowFilter.Users.pinata_gateway_subdomain": string;
}

export interface operations {}

export interface external {}
